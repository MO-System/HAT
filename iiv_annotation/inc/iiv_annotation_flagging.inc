<?
/*
Return: prints to output
Description: Flags an annotation. A given user or IP(for anonymous users only) can only flag an annotation once
*/
function iiv_annotation_flag($aid){
  drupal_set_header($text_content_type); //print plain text to client
  $flag_insert = "INSERT INTO {annotation_flags} (aid, ruid, flagger_ip, timestamp) VALUES(%d, %d, '%s', %d)";	
  
  global $user;
  $ruid = $user->uid;
  $ip = $_SERVER['REMOTE_ADDR'];

  //check that the user has not already flagged this annotation, and that the annotation ID is valid
  if(!_iiv_annotation_user_flagged($aid,$ruid) && _iiv_annotation_exists($aid)){
    $result = db_query($flag_insert,$aid,$ruid,$ip,time());
  }
  $message;
  $result == 1 ? $message = "success" : $message = "error";
  
  echo _iiv_annotation_get_jsonp_callback(_iiv_annotation_json_message($message));
}

/*
Return: void
Description: Deletes all flags by aid. This will be called when an annotation is deleted.
*/
function iiv_annotation_delete_flags($aid){
  $flag_delete = "DELETE FROM {annotation_flags} WHERE aid = %d";
  db_query($flag_delete, $aid);
}

/*
Return: prints to output
Description: Unflags an annotation
*/
function iiv_annotation_unflag($aid){
  drupal_set_header($text_content_type); //print plain text to client
  $logged_in_delete = "DELETE FROM {annotation_flags} WHERE aid = %d AND ruid = %d";
  $logged_out_delete = "DELETE FROM {annotation_flags} WHERE aid = %d AND flagger_ip = '%s' AND ruid = 0";
  global $user;
  $ruid = $user->uid;
  if($ruid){
	$result = db_query($logged_in_delete, $aid, $ruid);
  }
  else{
	$result = db_query($logged_out_delete,$aid, $_SERVER['REMOTE_ADDR']);
  }
  $message = $result ? "success" : "error";
  echo _iiv_annotation_get_jsonp_callback(_iiv_annotation_json_message($message));

}

/*
Return: void
Description: Used by flag admin page to clear all flags on an annotation
*/
function iiv_annotation_clearflags($aid){
  $clear_query = "DELETE FROM {annotation_flags} WHERE aid = %d";
  $result = db_query($clear_query, $aid);
  $result ? drupal_set_message(t('all flags cleared')) : drupal_set_message(t('error'));
  drupal_goto('admin/settings/iiv_annotation_flag');
}

/*
Return: db_query object
Description:grabs flagged annotations from database, ordered by most offending annotation
*/
function iiv_annotation_get_flagged($index, $limit){
  $flagged_select = "SELECT COUNT(*) AS num_flags, a.aid AS aid, a.pid AS pid, 
                     a.annotation_text AS annotation_text, a.public AS public, 
                     a.uid AS uid, a.timestamp AS timestamp
                     FROM annotation_flags af, annotations a 
                     WHERE a.aid = af.aid 
                     GROUP BY aid 
                     ORDER BY num_flags DESC
                     LIMIT %d, %d";

  return db_query($flagged_select, $index, $limit);
}

/*
Return: form generated by forms api
Description: Generates the form at the bottom of the flag admin screen
*/
function iiv_annotation_flag_settings_form(){
  $form = array(); 
  $form['wrapper'] = array(
    '#type' => 'fieldset',
  );
  $form['wrapper']['flag_email'] = array(
    '#type' => 'textfield',
	'#title' => t('Email'),
	'#size' => 25,
	'#weight' => -1,
	'#description' => t('Email address for flag notification'),
	'#default_value' => variable_get('iiv_annotation_flag_email', ''),
  );
  return $form;	
} 

/*
Returns: boolean
Description: this function determines if an AID is a valid annotation. There is no foreign key support
in the schema api so we must manually check whether the AID exists when inserting into annotation_flags
db_fetch_array will return false if there are no results
*/
function _iiv_annotation_exists($aid){
  return db_fetch_array(db_query("SELECT aid FROM {annotations} WHERE aid = %d",$aid));
}

/*
Return: boolean
Description: Determines is a user has flagged an annotation, as they may only flag once
*/
function _iiv_annotation_user_flagged($aid, $uid){
  //logged in users check on user id
  $logged_in_query = "SELECT aid,ruid FROM {annotation_flags} WHERE aid = %d AND ruid = %d";
  //anonymous users check on ip address
  $logged_out_query = "SELECT aid, ruid FROM {annotation_flags} WHERE aid = %d AND flagger_ip = '%s' AND ruid = 0";	
  
  //db_fetch_array will return false if result set is empty, $uid will be false if anonymous user ($uid == 0)
  return $uid ? db_fetch_array(db_query($logged_in_query,$aid,$uid)) : 
                      db_fetch_array(db_query($logged_out_query,$aid,$_SERVER['REMOTE_ADDR']));
}