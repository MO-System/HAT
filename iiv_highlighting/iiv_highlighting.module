<?
//commonly used strings
$text_content_type = 'Content-Type: text/plain; charset: utf-8';

/**
 * Implementation of hook_menu().
 */
function iiv_highlighting_menu() {
  $items['islandora/highlighting/%/%'] = array(
    'page callback' => 'iiv_highlighting_highlight',
    'page arguments' => array(2,3),
    'access arguments' => array('highlighting'), 
    'type' => MENU_CALLBACK,
  );

  return $items;
}


function iiv_highlighting_highlight($pid, $query){
$query_arr = array();
//Decompose the query into single word, and store them in the query_arr array.
$query_arr = explode(" ",$query);					
//Generate the coodinates file url.
$host = variable_get('fedora_base_url', 'http://localhost:8080/fedora');
$coodinates_url = $host.'/objects/'.$pid.'/datastreams/WORDSXY/content';
$xmlDoc = new DOMDocument();
if($xmlDoc->load($coodinates_url))
{
	$root = $xmlDoc -> documentElement;
	//Get each subtree of single line.
	$element = $root->getElementsByTagName('par');
	$result = array();
	$global = 0;
	foreach($element as $new)
	{
		$child = $new->childNodes;
		for($i=0;$i<$child->length;$i++)
		{
			if(count($query_arr) == 1)
			{
				$OK = false;
				if(strcasecmp($query_arr[0],$child->item($i)->firstChild->nodeValue) == 0)
				{
				 	$OK = true;
				}
				if(strcasecmp($query_arr[0].',',$child->item($i)->firstChild->nodeValue) == 0)
				{
					$OK = true;
				}
				if(strcasecmp($query_arr[0].'.',$child->item($i)->firstChild->nodeValue) == 0)
				{
					$OK = true;
				}
				if($OK)
				{
					$global ++;
					watchdog('test',$global);
					$temp = array('l'=>$child->item($i)->getAttribute('l'),'t'=>$child->item($i)->getAttribute('t'),'r'=>$child->item($i)->getAttribute('r'),'b'=>$child->item($i)->getAttribute('b'));
						array_push($result,$temp);
				}	
			}
			// find the word in the coordinate file which is the same as the first key word.
			else if(strcasecmp($query_arr[0],$child->item($i)->firstChild->nodeValue) == 0)
			{
				$count = $i;
				$j = 1;
				$OK = true;
				
				//check if the order and the position of key words are the same as the words in the coordinate file.
				while($j<count($query_arr)-1&&$OK)
				{
					$count += 2;
					if($count<$child->length)
					{
						if(strcasecmp($query_arr[$j],$child->item($count)->firstChild->nodeValue) !=0)
						{
							$OK = false;
						}
					}
					$j++;	
				}
				$j = count($query_arr)-1;
				$count += 2;
				if($count<$child->length)
				{
					if(strncasecmp($query_arr[$j],$child->item($count)->firstChild->nodeValue,strlen($query_arr[$j])-1) != 0)
					{
							$OK = false;
					}
					if(strlen($query_arr[$j])*2 < strlen($child->item($count)->firstChild->nodeValue))
					{
							$OK = false;
					}					
				}
				
				if($OK)
				{
					//generate a array with 4 coordinates for one word, and push all the arrays into single array.  
					for($k=0;$k<count($query_arr);$k++)
					{
						$number = $i+2*$k;
						$temp = array('l'=>$child->item($number)->getAttribute('l'),'t'=>$child->item($number)->getAttribute('t'),'r'=>$child->item($number)->getAttribute('r'),'b'=>$child->item($number)->getAttribute('b'));
						array_push($result,$temp);
				
					}
				}
			}
		}
	
	}
	//Output is a json object. 
	echo json_encode($result);
}
else
{
	print "This PID does not exist!";
}
  
}



